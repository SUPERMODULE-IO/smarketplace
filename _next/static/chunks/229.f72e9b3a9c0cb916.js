"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[229],{52229:function(t,e,i){i.r(e),i.d(e,{Marketplace:function(){return c}});var r=i(55539),a=i(41017),s=i(9279),n=i(2593),o=i(38776);i(13550),i(25025),i(70332),i(8455),i(59189),i(26729),i(54098),i(62555),i(26219),i(61303),i(49242),i(70565),i(13670),i(79120),i(97604),i(8187),i(19362),i(71497),i(54730),i(36250),i(85725),i(38730),i(2090),i(237),i(65609),i(86841),i(49561),i(54253),i(40553),i(26),i(69392),i(62822),i(82037),i(2162),i(64063),i(34161),i(50266),i(98839),i(51375),i(43320),i(65815),i(40721),i(24601),i(46878),i(20583),i(92355),i(84194),i(51121),i(32484),i(78435);class c{get chainId(){return this._chainId}constructor(t,e,i){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},n=arguments.length>4?arguments[4]:void 0,o=arguments.length>5?arguments[5]:void 0,d=arguments.length>6&&void 0!==arguments[6]?arguments[6]:new a.co(t,e,n,s);(0,r._)(this,"abi",void 0),(0,r._)(this,"contractWrapper",void 0),(0,r._)(this,"storage",void 0),(0,r._)(this,"encoder",void 0),(0,r._)(this,"events",void 0),(0,r._)(this,"estimator",void 0),(0,r._)(this,"platformFees",void 0),(0,r._)(this,"metadata",void 0),(0,r._)(this,"roles",void 0),(0,r._)(this,"interceptor",void 0),(0,r._)(this,"direct",void 0),(0,r._)(this,"auction",void 0),(0,r._)(this,"_chainId",void 0),(0,r._)(this,"getAll",this.getAllListings),this._chainId=o,this.abi=n,this.contractWrapper=d,this.storage=i,this.metadata=new a.ai(this.contractWrapper,a.cr,this.storage),this.roles=new a.aj(this.contractWrapper,c.contractRoles),this.encoder=new a.ah(this.contractWrapper),this.estimator=new a.aS(this.contractWrapper),this.direct=new a.aP(this.contractWrapper,this.storage),this.auction=new a.aQ(this.contractWrapper,this.storage),this.events=new a.aT(this.contractWrapper),this.platformFees=new a.aV(this.contractWrapper),this.interceptor=new a.aU(this.contractWrapper)}onNetworkUpdated(t){this.contractWrapper.updateSignerOrProvider(t)}getAddress(){return this.contractWrapper.readContract.address}async getListing(t){const e=await this.contractWrapper.readContract.listings(t);if(e.assetContract===s.d)throw new a.bh(this.getAddress(),t.toString());switch(e.listingType){case a.a$.Auction:return await this.auction.mapListing(e);case a.a$.Direct:return await this.direct.mapListing(e);default:throw new Error(`Unknown listing type: ${e.listingType}`)}}async getActiveListings(t){const e=await this.getAllListingsNoFilter(!0),i=this.applyFilter(e,t),r=n.O$.from(Math.floor(Date.now()/1e3));return i.filter((t=>t.type===a.a$.Auction&&n.O$.from(t.endTimeInEpochSeconds).gt(r)&&n.O$.from(t.startTimeInEpochSeconds).lte(r)||t.type===a.a$.Direct&&t.quantity>0))}async getAllListings(t){const e=await this.getAllListingsNoFilter(!1);return this.applyFilter(e,t)}async getTotalCount(){return await this.contractWrapper.readContract.totalListings()}async isRestrictedToListerRoleOnly(){return!(await this.contractWrapper.readContract.hasRole((0,a.bs)("lister"),s.d))}async getBidBufferBps(){return this.contractWrapper.readContract.bidBufferBps()}async getTimeBufferInSeconds(){return this.contractWrapper.readContract.timeBuffer()}async getOffers(t){const e=(await this.events.getEvents("NewOffer")).filter((e=>e.data.listingId.eq(t)));return await Promise.all(e.map((async e=>await(0,a.cs)(this.contractWrapper.getProvider(),n.O$.from(t),{quantityWanted:e.data.quantityWanted,pricePerToken:e.data.quantityWanted.gt(0)?e.data.totalOfferAmount.div(e.data.quantityWanted):e.data.totalOfferAmount,currency:e.data.currency,offeror:e.data.offeror}))))}async buyoutListing(t,e,i){const r=await this.contractWrapper.readContract.listings(t);if(r.listingId.toString()!==t.toString())throw new a.bh(this.getAddress(),t.toString());switch(r.listingType){case a.a$.Direct:return(0,o.Z)(void 0!==e,"quantityDesired is required when buying out a direct listing"),await this.direct.buyoutListing(t,e,i);case a.a$.Auction:return await this.auction.buyoutListing(t);default:throw Error(`Unknown listing type: ${r.listingType}`)}}async makeOffer(t,e,i){const r=await this.contractWrapper.readContract.listings(t);if(r.listingId.toString()!==t.toString())throw new a.bh(this.getAddress(),t.toString());const s=await this.contractWrapper.getChainID();switch(r.listingType){case a.a$.Direct:return(0,o.Z)(i,"quantity is required when making an offer on a direct listing"),await this.direct.makeOffer(t,i,(0,a.ct)(r.currency)?a.bW[s].wrapped.address:r.currency,e);case a.a$.Auction:return await this.auction.makeBid(t,e);default:throw Error(`Unknown listing type: ${r.listingType}`)}}async setBidBufferBps(t){await this.roles.verify(["admin"],await this.contractWrapper.getSignerAddress());const e=await this.getTimeBufferInSeconds();await this.contractWrapper.sendTransaction("setAuctionBuffers",[e,n.O$.from(t)])}async setTimeBufferInSeconds(t){await this.roles.verify(["admin"],await this.contractWrapper.getSignerAddress());const e=await this.getBidBufferBps();await this.contractWrapper.sendTransaction("setAuctionBuffers",[n.O$.from(t),e])}async allowListingFromSpecificAssetOnly(t){const e=[];(await this.roles.get("asset")).includes(s.d)&&e.push(this.encoder.encode("revokeRole",[(0,a.bs)("asset"),s.d])),e.push(this.encoder.encode("grantRole",[(0,a.bs)("asset"),t])),await this.contractWrapper.multiCall(e)}async allowListingFromAnyAsset(){const t=[],e=await this.roles.get("asset");for(const i in e)t.push(this.encoder.encode("revokeRole",[(0,a.bs)("asset"),i]));t.push(this.encoder.encode("grantRole",[(0,a.bs)("asset"),s.d])),await this.contractWrapper.multiCall(t)}async getAllListingsNoFilter(t){return(await Promise.all(Array.from(Array((await this.contractWrapper.readContract.totalListings()).toNumber()).keys()).map((async e=>{let i;try{i=await this.getListing(e)}catch(r){return r instanceof a.bh?void 0:void console.warn(`Failed to get listing ${e}' - skipping. Try 'marketplace.getListing(${e})' to get the underlying error.`)}if(i.type===a.a$.Auction)return i;if(t){const{valid:t}=await this.direct.isStillValidListing(i);if(!t)return}return i})))).filter((t=>void 0!==t))}applyFilter(t,e){let i=[...t];const a=n.O$.from((null===e||void 0===e?void 0:e.start)||0).toNumber(),s=n.O$.from((null===e||void 0===e?void 0:e.count)||r.D).toNumber();return e&&(e.seller&&(i=i.filter((t=>{var i;return t.sellerAddress.toString().toLowerCase()===(null===e||void 0===e||null===(i=e.seller)||void 0===i?void 0:i.toString().toLowerCase())}))),e.tokenContract&&(i=i.filter((t=>{var i;return t.assetContractAddress.toString().toLowerCase()===(null===e||void 0===e||null===(i=e.tokenContract)||void 0===i?void 0:i.toString().toLowerCase())}))),void 0!==e.tokenId&&(i=i.filter((t=>{var i;return t.tokenId.toString()===(null===e||void 0===e||null===(i=e.tokenId)||void 0===i?void 0:i.toString())}))),i=i.filter(((t,e)=>e>=a)),i=i.slice(0,s)),i}async call(t){for(var e=arguments.length,i=new Array(e>1?e-1:0),r=1;r<e;r++)i[r-1]=arguments[r];return this.contractWrapper.call(t,...i)}}(0,r._)(c,"contractRoles",["admin","lister","asset"])}}]);